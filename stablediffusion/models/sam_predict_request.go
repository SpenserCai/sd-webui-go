// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SamPredictRequest SamPredictRequest
//
// swagger:model SamPredictRequest
type SamPredictRequest struct {

	// Dino Box Threshold
	DinoBoxThreshold *float64 `json:"dino_box_threshold,omitempty"`

	// Dino Enabled
	DinoEnabled *bool `json:"dino_enabled,omitempty"`

	// Dino Model Name
	DinoModelName *string `json:"dino_model_name,omitempty"`

	// Dino Preview Boxes Selection
	DinoPreviewBoxesSelection []int64 `json:"dino_preview_boxes_selection"`

	// Dino Preview Checkbox
	DinoPreviewCheckbox *bool `json:"dino_preview_checkbox,omitempty"`

	// Dino Text Prompt
	DinoTextPrompt string `json:"dino_text_prompt,omitempty"`

	// Input Image
	// Required: true
	InputImage *string `json:"input_image"`

	// Sam Model Name
	SamModelName *string `json:"sam_model_name,omitempty"`

	// Sam Negative Points
	SamNegativePoints [][]float64 `json:"sam_negative_points"`

	// Sam Positive Points
	SamPositivePoints [][]float64 `json:"sam_positive_points"`
}

// Validate validates this sam predict request
func (m *SamPredictRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInputImage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SamPredictRequest) validateInputImage(formats strfmt.Registry) error {

	if err := validate.Required("input_image", "body", m.InputImage); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this sam predict request based on context it is used
func (m *SamPredictRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SamPredictRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SamPredictRequest) UnmarshalBinary(b []byte) error {
	var res SamPredictRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
