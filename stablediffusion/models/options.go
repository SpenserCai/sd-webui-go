// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Options Options
//
// swagger:model Options
type Options struct {

	// Clip Stop At Last Layers
	//
	// Clip skip
	CLIPStopAtLastLayers *float64 `json:"CLIP_stop_at_last_layers,omitempty"`

	// Esrgan Tile
	//
	// Tile size for ESRGAN upscalers.
	ESRGANTile *float64 `json:"ESRGAN_tile,omitempty"`

	// Esrgan Tile Overlap
	//
	// Tile overlap for ESRGAN upscalers.
	ESRGANTileOverlap *float64 `json:"ESRGAN_tile_overlap,omitempty"`

	// Add Model Hash To Info
	//
	// Add model hash to generation information
	AddModelHashToInfo *bool `json:"add_model_hash_to_info,omitempty"`

	// Add Model Name To Info
	//
	// Add model name to generation information
	AddModelNameToInfo *bool `json:"add_model_name_to_info,omitempty"`

	// Add User Name To Info
	//
	// Add user name to generation information when authenticated
	AddUserNameToInfo interface{} `json:"add_user_name_to_info,omitempty"`

	// Add Version To Infotext
	//
	// Add program version to generation information
	AddVersionToInfotext *bool `json:"add_version_to_infotext,omitempty"`

	// Always Discard Next To Last Sigma
	//
	// Always discard next-to-last sigma
	AlwaysDiscardNextToLastSigma interface{} `json:"always_discard_next_to_last_sigma,omitempty"`

	// Auto Vae Precision
	//
	// Automaticlly revert VAE to 32-bit floats
	AutoVaePrecision *bool `json:"auto_vae_precision,omitempty"`

	// Clean Temp Dir At Start
	//
	// Cleanup non-default temporary directory when starting webui
	CleanTempDirAtStart interface{} `json:"clean_temp_dir_at_start,omitempty"`

	// Code Former Weight
	//
	// CodeFormer weight
	CodeFormerWeight *float64 `json:"code_former_weight,omitempty"`

	// Comma Padding Backtrack
	//
	// Prompt word wrap length limit
	CommaPaddingBacktrack *float64 `json:"comma_padding_backtrack,omitempty"`

	// Cross Attention Optimization
	//
	// Cross attention optimization
	CrossAttentionOptimization *string `json:"cross_attention_optimization,omitempty"`

	// Dataset Filename Join String
	//
	// Filename join string
	DatasetFilenameJoinString *string `json:"dataset_filename_join_string,omitempty"`

	// Dataset Filename Word Regex
	//
	// Filename word regex
	DatasetFilenameWordRegex interface{} `json:"dataset_filename_word_regex,omitempty"`

	// Ddim Discretize
	//
	// img2img DDIM discretize
	DdimDiscretize *string `json:"ddim_discretize,omitempty"`

	// Deepbooru Escape
	//
	// deepbooru: escape (\) brackets
	DeepbooruEscape *bool `json:"deepbooru_escape,omitempty"`

	// Deepbooru Filter Tags
	//
	// deepbooru: filter out those tags
	DeepbooruFilterTags interface{} `json:"deepbooru_filter_tags,omitempty"`

	// Deepbooru Sort Alpha
	//
	// deepbooru: sort tags alphabetically
	DeepbooruSortAlpha *bool `json:"deepbooru_sort_alpha,omitempty"`

	// Deepbooru Use Spaces
	//
	// deepbooru: use spaces in tags
	DeepbooruUseSpaces *bool `json:"deepbooru_use_spaces,omitempty"`

	// Dimensions And Batch Together
	//
	// Show Width/Height and Batch sliders in same row
	DimensionsAndBatchTogether *bool `json:"dimensions_and_batch_together,omitempty"`

	// Directories Filename Pattern
	//
	// Directory name pattern
	DirectoriesFilenamePattern *string `json:"directories_filename_pattern,omitempty"`

	// Directories Max Prompt Words
	//
	// Max prompt words for [prompt_words] pattern
	DirectoriesMaxPromptWords *float64 `json:"directories_max_prompt_words,omitempty"`

	// Disable All Extensions
	//
	// Disable all extensions (preserves the list of disabled extensions)
	DisableAllExtensions *string `json:"disable_all_extensions,omitempty"`

	// Disable Mmap Load Safetensors
	//
	// Disable memmapping for loading .safetensors files.
	DisableMmapLoadSafetensors interface{} `json:"disable_mmap_load_safetensors,omitempty"`

	// Disable Token Counters
	//
	// Disable prompt token counters
	DisableTokenCounters interface{} `json:"disable_token_counters,omitempty"`

	// Disable Weights Auto Swap
	//
	// Disregard checkpoint information from pasted infotext
	DisableWeightsAutoSwap *bool `json:"disable_weights_auto_swap,omitempty"`

	// Disabled Extensions
	//
	// Disable these extensions
	DisabledExtensions interface{} `json:"disabled_extensions,omitempty"`

	// Do Not Show Images
	//
	// Do not show any images in results for web
	DoNotShowImages interface{} `json:"do_not_show_images,omitempty"`

	// Dont Fix Second Order Samplers Schedule
	//
	// Do not fix prompt schedule for second order samplers.
	DontFixSecondOrderSamplersSchedule interface{} `json:"dont_fix_second_order_samplers_schedule,omitempty"`

	// Enable Batch Seeds
	//
	// Make K-diffusion samplers produce same images in a batch as when making a single image
	EnableBatchSeeds *bool `json:"enable_batch_seeds,omitempty"`

	// Enable Emphasis
	//
	// Enable emphasis
	EnableEmphasis *bool `json:"enable_emphasis,omitempty"`

	// Enable Pnginfo
	//
	// Save text information about generation parameters as chunks to png files
	EnablePnginfo *bool `json:"enable_pnginfo,omitempty"`

	// Enable Quantization
	//
	// Enable quantization in K samplers for sharper and cleaner results. This may change existing seeds. Requires restart to apply.
	EnableQuantization interface{} `json:"enable_quantization,omitempty"`

	// Eta Ancestral
	//
	// Eta for ancestral samplers
	EtaAncestral *float64 `json:"eta_ancestral,omitempty"`

	// Eta Ddim
	//
	// Eta for DDIM
	EtaDdim interface{} `json:"eta_ddim,omitempty"`

	// Eta Noise Seed Delta
	//
	// Eta noise seed delta
	EtaNoiseSeedDelta interface{} `json:"eta_noise_seed_delta,omitempty"`

	// Experimental Persistent Cond Cache
	//
	// persistent cond cache
	ExperimentalPersistentCondCache interface{} `json:"experimental_persistent_cond_cache,omitempty"`

	// Export For 4Chan
	//
	// Save copy of large images as JPG
	ExportFor4chan *bool `json:"export_for_4chan,omitempty"`

	// Extra Networks Add Text Separator
	//
	// Extra networks separator
	ExtraNetworksAddTextSeparator *string `json:"extra_networks_add_text_separator,omitempty"`

	// Extra Networks Card Height
	//
	// Card height for Extra Networks
	ExtraNetworksCardHeight interface{} `json:"extra_networks_card_height,omitempty"`

	// Extra Networks Card Show Desc
	//
	// Show description on card
	ExtraNetworksCardShowDesc *bool `json:"extra_networks_card_show_desc,omitempty"`

	// Extra Networks Card Text Scale
	//
	// Card text scale
	ExtraNetworksCardTextScale *float64 `json:"extra_networks_card_text_scale,omitempty"`

	// Extra Networks Card Width
	//
	// Card width for Extra Networks
	ExtraNetworksCardWidth interface{} `json:"extra_networks_card_width,omitempty"`

	// Extra Networks Default Multiplier
	//
	// Default multiplier for extra networks
	ExtraNetworksDefaultMultiplier *float64 `json:"extra_networks_default_multiplier,omitempty"`

	// Extra Networks Hidden Models
	//
	// Show cards for models in hidden directories
	ExtraNetworksHiddenModels *string `json:"extra_networks_hidden_models,omitempty"`

	// Extra Networks Show Hidden Directories
	//
	// Show hidden directories
	ExtraNetworksShowHiddenDirectories *bool `json:"extra_networks_show_hidden_directories,omitempty"`

	// Face Restoration Model
	//
	// Face restoration model
	FaceRestorationModel *string `json:"face_restoration_model,omitempty"`

	// Face Restoration Unload
	//
	// Move face restoration model from VRAM into RAM after processing
	FaceRestorationUnload interface{} `json:"face_restoration_unload,omitempty"`

	// Font
	//
	// Font for image grids that have text
	Font interface{} `json:"font,omitempty"`

	// Gradio Theme
	//
	// Gradio theme
	GradioTheme *string `json:"gradio_theme,omitempty"`

	// Grid Background Color
	//
	// Background color for image grids
	GridBackgroundColor *string `json:"grid_background_color,omitempty"`

	// Grid Extended Filename
	//
	// Add extended info (seed, prompt) to filename when saving grid
	GridExtendedFilename interface{} `json:"grid_extended_filename,omitempty"`

	// Grid Format
	//
	// File format for grids
	GridFormat *string `json:"grid_format,omitempty"`

	// Grid Only If Multiple
	//
	// Do not save grids consisting of one picture
	GridOnlyIfMultiple *bool `json:"grid_only_if_multiple,omitempty"`

	// Grid Prevent Empty Spots
	//
	// Prevent empty spots in grid (when set to autodetect)
	GridPreventEmptySpots interface{} `json:"grid_prevent_empty_spots,omitempty"`

	// Grid Save
	//
	// Always save all generated image grids
	GridSave *bool `json:"grid_save,omitempty"`

	// Grid Save To Dirs
	//
	// Save grids to a subdirectory
	GridSaveToDirs *bool `json:"grid_save_to_dirs,omitempty"`

	// Grid Text Active Color
	//
	// Text color for image grids
	GridTextActiveColor *string `json:"grid_text_active_color,omitempty"`

	// Grid Text Inactive Color
	//
	// Inactive text color for image grids
	GridTextInactiveColor *string `json:"grid_text_inactive_color,omitempty"`

	// Grid Zip Filename Pattern
	//
	// Archive filename pattern
	GridZipFilenamePattern interface{} `json:"grid_zip_filename_pattern,omitempty"`

	// Hidden Tabs
	//
	// Hidden UI tabs
	HiddenTabs interface{} `json:"hidden_tabs,omitempty"`

	// Hide Samplers
	//
	// Hide samplers in user interface
	HideSamplers interface{} `json:"hide_samplers,omitempty"`

	// Hires Fix Show Prompts
	//
	// Hires fix: show hires prompt and negative prompt
	HiresFixShowPrompts interface{} `json:"hires_fix_show_prompts,omitempty"`

	// Hires Fix Show Sampler
	//
	// Hires fix: show hires sampler selection
	HiresFixShowSampler interface{} `json:"hires_fix_show_sampler,omitempty"`

	// Hires Fix Use Firstpass Conds
	//
	// For hires fix, calculate conds of second pass using extra networks of first pass.
	HiresFixUseFirstpassConds interface{} `json:"hires_fix_use_firstpass_conds,omitempty"`

	// Img2Img Background Color
	//
	// With img2img, fill image's transparent parts with this color.
	Img2imgBackgroundColor *string `json:"img2img_background_color,omitempty"`

	// Img2Img Color Correction
	//
	// Apply color correction to img2img results to match original colors.
	Img2imgColorCorrection interface{} `json:"img2img_color_correction,omitempty"`

	// Img2Img Editor Height
	//
	// img2img: height of image editor
	Img2imgEditorHeight *float64 `json:"img2img_editor_height,omitempty"`

	// Img2Img Fix Steps
	//
	// With img2img, do exactly the amount of steps the slider specifies.
	Img2imgFixSteps interface{} `json:"img2img_fix_steps,omitempty"`

	// Img Downscale Threshold
	//
	// File size limit for the above option, MB
	ImgDownscaleThreshold *float64 `json:"img_downscale_threshold,omitempty"`

	// Img Max Size Mp
	//
	// Maximum image size
	ImgMaxSizeMp *float64 `json:"img_max_size_mp,omitempty"`

	// Infotext Styles
	//
	// Infer styles from prompts of pasted infotext
	InfotextStyles *string `json:"infotext_styles,omitempty"`

	// Initial Noise Multiplier
	//
	// Noise multiplier for img2img
	InitialNoiseMultiplier *float64 `json:"initial_noise_multiplier,omitempty"`

	// Inpainting Mask Weight
	//
	// Inpainting conditioning mask strength
	InpaintingMaskWeight *float64 `json:"inpainting_mask_weight,omitempty"`

	// Interrogate Clip Dict Limit
	//
	// CLIP: maximum number of lines in text file
	InterrogateClipDictLimit *float64 `json:"interrogate_clip_dict_limit,omitempty"`

	// Interrogate Clip Max Length
	//
	// BLIP: maximum description length
	InterrogateClipMaxLength *float64 `json:"interrogate_clip_max_length,omitempty"`

	// Interrogate Clip Min Length
	//
	// BLIP: minimum description length
	InterrogateClipMinLength *float64 `json:"interrogate_clip_min_length,omitempty"`

	// Interrogate Clip Num Beams
	//
	// BLIP: num_beams
	InterrogateClipNumBeams *float64 `json:"interrogate_clip_num_beams,omitempty"`

	// Interrogate Clip Skip Categories
	//
	// CLIP: skip inquire categories
	InterrogateClipSkipCategories interface{} `json:"interrogate_clip_skip_categories,omitempty"`

	// Interrogate Deepbooru Score Threshold
	//
	// deepbooru: score threshold
	InterrogateDeepbooruScoreThreshold *float64 `json:"interrogate_deepbooru_score_threshold,omitempty"`

	// Interrogate Keep Models In Memory
	//
	// Keep models in VRAM
	InterrogateKeepModelsInMemory interface{} `json:"interrogate_keep_models_in_memory,omitempty"`

	// Interrogate Return Ranks
	//
	// Include ranks of model tags matches in results.
	InterrogateReturnRanks interface{} `json:"interrogate_return_ranks,omitempty"`

	// Jpeg Quality
	//
	// Quality for saved jpeg images
	JpegQuality *float64 `json:"jpeg_quality,omitempty"`

	// Js Modal Lightbox
	//
	// Enable full page image viewer
	JsModalLightbox *bool `json:"js_modal_lightbox,omitempty"`

	// Js Modal Lightbox Gamepad
	//
	// Navigate image viewer with gamepad
	JsModalLightboxGamepad interface{} `json:"js_modal_lightbox_gamepad,omitempty"`

	// Js Modal Lightbox Gamepad Repeat
	//
	// Gamepad repeat period, in milliseconds
	JsModalLightboxGamepadRepeat *float64 `json:"js_modal_lightbox_gamepad_repeat,omitempty"`

	// Js Modal Lightbox Initially Zoomed
	//
	// Show images zoomed in by default in full page image viewer
	JsModalLightboxInitiallyZoomed *bool `json:"js_modal_lightbox_initially_zoomed,omitempty"`

	// K Sched Type
	//
	// scheduler type
	KSchedType *string `json:"k_sched_type,omitempty"`

	// Keyedit Delimiters
	//
	// Ctrl+up/down word delimiters
	KeyeditDelimiters *string `json:"keyedit_delimiters,omitempty"`

	// Keyedit Move
	//
	// Alt+left/right moves prompt elements
	KeyeditMove *bool `json:"keyedit_move,omitempty"`

	// Keyedit Precision Attention
	//
	// Ctrl+up/down precision when editing (attention:1.1)
	KeyeditPrecisionAttention *float64 `json:"keyedit_precision_attention,omitempty"`

	// Keyedit Precision Extra
	//
	// Ctrl+up/down precision when editing <extra networks:0.9>
	KeyeditPrecisionExtra *float64 `json:"keyedit_precision_extra,omitempty"`

	// List Hidden Files
	//
	// Load models/files in hidden directories
	ListHiddenFiles *bool `json:"list_hidden_files,omitempty"`

	// Live Preview Content
	//
	// Live preview subject
	LivePreviewContent *string `json:"live_preview_content,omitempty"`

	// Live Preview Refresh Period
	//
	// Progressbar and preview update period
	LivePreviewRefreshPeriod *float64 `json:"live_preview_refresh_period,omitempty"`

	// Live Previews Enable
	//
	// Show live previews of the created image
	LivePreviewsEnable *bool `json:"live_previews_enable,omitempty"`

	// Live Previews Image Format
	//
	// Live preview file format
	LivePreviewsImageFormat *string `json:"live_previews_image_format,omitempty"`

	// Localization
	//
	// Localization
	Localization *string `json:"localization,omitempty"`

	// Memmon Poll Rate
	//
	// VRAM usage polls per second during generation.
	MemmonPollRate *float64 `json:"memmon_poll_rate,omitempty"`

	// Multiple Tqdm
	//
	// Add a second progress bar to the console that shows progress for an entire job.
	MultipleTqdm *bool `json:"multiple_tqdm,omitempty"`

	// N Rows
	//
	// Grid row count; use -1 for autodetect and 0 for it to be same as batch size
	NRows *float64 `json:"n_rows,omitempty"`

	// No Dpmpp Sde Batch Determinism
	//
	// Do not make DPM++ SDE deterministic across different batch sizes.
	NoDpmppSdeBatchDeterminism interface{} `json:"no_dpmpp_sde_batch_determinism,omitempty"`

	// Outdir Extras Samples
	//
	// Output directory for images from extras tab
	OutdirExtrasSamples *string `json:"outdir_extras_samples,omitempty"`

	// Outdir Grids
	//
	// Output directory for grids; if empty, defaults to two directories below
	OutdirGrids interface{} `json:"outdir_grids,omitempty"`

	// Outdir Img2Img Grids
	//
	// Output directory for img2img grids
	OutdirImg2imgGrids *string `json:"outdir_img2img_grids,omitempty"`

	// Outdir Img2Img Samples
	//
	// Output directory for img2img images
	OutdirImg2imgSamples *string `json:"outdir_img2img_samples,omitempty"`

	// Outdir Init Images
	//
	// Directory for saving init images when using img2img
	OutdirInitImages *string `json:"outdir_init_images,omitempty"`

	// Outdir Samples
	//
	// Output directory for images; if empty, defaults to three directories below
	OutdirSamples interface{} `json:"outdir_samples,omitempty"`

	// Outdir Save
	//
	// Directory for saving images using the Save button
	OutdirSave *string `json:"outdir_save,omitempty"`

	// Outdir Txt2Img Grids
	//
	// Output directory for txt2img grids
	OutdirTxt2imgGrids *string `json:"outdir_txt2img_grids,omitempty"`

	// Outdir Txt2Img Samples
	//
	// Output directory for txt2img images
	OutdirTxt2imgSamples *string `json:"outdir_txt2img_samples,omitempty"`

	// Pad Cond Uncond
	//
	// Pad prompt/negative prompt to be same length
	PadCondUncond interface{} `json:"pad_cond_uncond,omitempty"`

	// Pin Memory
	//
	// Turn on pin_memory for DataLoader. Makes training slightly faster but can increase memory usage.
	PinMemory interface{} `json:"pin_memory,omitempty"`

	// Postprocessing Enable In Main Ui
	//
	// Enable postprocessing operations in txt2img and img2img tabs
	PostprocessingEnableInMainUI interface{} `json:"postprocessing_enable_in_main_ui,omitempty"`

	// Postprocessing Operation Order
	//
	// Postprocessing operation order
	PostprocessingOperationOrder interface{} `json:"postprocessing_operation_order,omitempty"`

	// Print Hypernet Extra
	//
	// Print extra hypernetwork information to console.
	PrintHypernetExtra interface{} `json:"print_hypernet_extra,omitempty"`

	// Quicksettings List
	//
	// Quicksettings list
	QuicksettingsList []interface{} `json:"quicksettings_list"`

	// Randn Source
	//
	// Random number generator source.
	RandnSource *string `json:"randn_source,omitempty"`

	// Realesrgan Enabled Models
	//
	// Select which Real-ESRGAN models to show in the web UI.
	RealesrganEnabledModels []interface{} `json:"realesrgan_enabled_models"`

	// Restore Config State File
	//
	// Config state file to restore from, under 'config-states/' folder
	RestoreConfigStateFile interface{} `json:"restore_config_state_file,omitempty"`

	// Return Grid
	//
	// Show grid in results for web
	ReturnGrid *bool `json:"return_grid,omitempty"`

	// Return Mask
	//
	// For inpainting, include the greyscale mask in results for web
	ReturnMask interface{} `json:"return_mask,omitempty"`

	// Return Mask Composite
	//
	// For inpainting, include masked composite in results for web
	ReturnMaskComposite interface{} `json:"return_mask_composite,omitempty"`

	// Rho
	//
	// rho
	Rho interface{} `json:"rho,omitempty"`

	// S Churn
	//
	// sigma churn
	SChurn interface{} `json:"s_churn,omitempty"`

	// S Min Uncond
	//
	// Negative Guidance minimum sigma
	SMinUncond interface{} `json:"s_min_uncond,omitempty"`

	// S Noise
	//
	// sigma noise
	SNoise *float64 `json:"s_noise,omitempty"`

	// S Tmin
	//
	// sigma tmin
	STmin interface{} `json:"s_tmin,omitempty"`

	// Samplers In Dropdown
	//
	// Use dropdown for sampler selection instead of radio group
	SamplersInDropdown *bool `json:"samplers_in_dropdown,omitempty"`

	// Samples Filename Pattern
	//
	// Images filename pattern
	SamplesFilenamePattern interface{} `json:"samples_filename_pattern,omitempty"`

	// Samples Format
	//
	// File format for images
	SamplesFormat *string `json:"samples_format,omitempty"`

	// Samples Log Stdout
	//
	// Always print all generation info to standard output
	SamplesLogStdout interface{} `json:"samples_log_stdout,omitempty"`

	// Samples Save
	//
	// Always save all generated images
	SamplesSave *bool `json:"samples_save,omitempty"`

	// Save Images Add Number
	//
	// Add number to filename when saving
	SaveImagesAddNumber *bool `json:"save_images_add_number,omitempty"`

	// Save Images Before Color Correction
	//
	// Save a copy of image before applying color correction to img2img results
	SaveImagesBeforeColorCorrection interface{} `json:"save_images_before_color_correction,omitempty"`

	// Save Images Before Face Restoration
	//
	// Save a copy of image before doing face restoration.
	SaveImagesBeforeFaceRestoration interface{} `json:"save_images_before_face_restoration,omitempty"`

	// Save Images Before Highres Fix
	//
	// Save a copy of image before applying highres fix.
	SaveImagesBeforeHighresFix interface{} `json:"save_images_before_highres_fix,omitempty"`

	// Save Init Img
	//
	// Save init images when using img2img
	SaveInitImg interface{} `json:"save_init_img,omitempty"`

	// Save Mask
	//
	// For inpainting, save a copy of the greyscale mask
	SaveMask interface{} `json:"save_mask,omitempty"`

	// Save Mask Composite
	//
	// For inpainting, save a masked composite
	SaveMaskComposite interface{} `json:"save_mask_composite,omitempty"`

	// Save Optimizer State
	//
	// Saves Optimizer state as separate *.optim file. Training of embedding or HN can be resumed with the matching optim file.
	SaveOptimizerState interface{} `json:"save_optimizer_state,omitempty"`

	// Save Selected Only
	//
	// When using 'Save' button, only save a single selected image
	SaveSelectedOnly *bool `json:"save_selected_only,omitempty"`

	// Save To Dirs
	//
	// Save images to a subdirectory
	SaveToDirs *bool `json:"save_to_dirs,omitempty"`

	// Save Training Settings To Txt
	//
	// Save textual inversion and hypernet settings to a text file whenever training starts.
	SaveTrainingSettingsToTxt *bool `json:"save_training_settings_to_txt,omitempty"`

	// Save Txt
	//
	// Create a text file next to every image with generation parameters.
	SaveTxt interface{} `json:"save_txt,omitempty"`

	// Sd Checkpoint Cache
	//
	// Checkpoints to cache in RAM
	SdCheckpointCache interface{} `json:"sd_checkpoint_cache,omitempty"`

	// Sd Checkpoint Hash
	//
	// SHA256 hash of the current checkpoint
	SdCheckpointHash interface{} `json:"sd_checkpoint_hash,omitempty"`

	// Sd Hypernetwork
	//
	// Add hypernetwork to prompt
	SdHypernetwork *string `json:"sd_hypernetwork,omitempty"`

	// Sd Lyco
	//
	// Add LyCORIS to prompt
	SdLyco *string `json:"sd_lyco,omitempty"`

	// Sd Model Checkpoint
	//
	// Stable Diffusion checkpoint
	SdModelCheckpoint interface{} `json:"sd_model_checkpoint,omitempty"`

	// Sd Unet
	//
	// SD Unet
	SdUnet *string `json:"sd_unet,omitempty"`

	// Sd Vae
	//
	// SD VAE
	SdVae *string `json:"sd_vae,omitempty"`

	// Sd Vae As Default
	//
	// Ignore selected VAE for stable diffusion checkpoints that have their own .vae.pt next to them
	SdVaeAsDefault *bool `json:"sd_vae_as_default,omitempty"`

	// Sd Vae Checkpoint Cache
	//
	// VAE Checkpoints to cache in RAM
	SdVaeCheckpointCache interface{} `json:"sd_vae_checkpoint_cache,omitempty"`

	// Sdxl Crop Left
	//
	// crop left coordinate
	SdxlCropLeft interface{} `json:"sdxl_crop_left,omitempty"`

	// Sdxl Crop Top
	//
	// crop top coordinate
	SdxlCropTop interface{} `json:"sdxl_crop_top,omitempty"`

	// Sdxl Refiner High Aesthetic Score
	//
	// SDXL high aesthetic score
	SdxlRefinerHighAestheticScore *float64 `json:"sdxl_refiner_high_aesthetic_score,omitempty"`

	// Sdxl Refiner Low Aesthetic Score
	//
	// SDXL low aesthetic score
	SdxlRefinerLowAestheticScore *float64 `json:"sdxl_refiner_low_aesthetic_score,omitempty"`

	// Send Seed
	//
	// Send seed when sending prompt or image to other interface
	SendSeed *bool `json:"send_seed,omitempty"`

	// Send Size
	//
	// Send size when sending prompt or image to another interface
	SendSize *bool `json:"send_size,omitempty"`

	// Show Progress Every N Steps
	//
	// Live preview display period
	ShowProgressEverynSteps *float64 `json:"show_progress_every_n_steps,omitempty"`

	// Show Progress Grid
	//
	// Show previews of all images generated in a batch as a grid
	ShowProgressGrid *bool `json:"show_progress_grid,omitempty"`

	// Show Progress In Title
	//
	// Show generation progress in window title.
	ShowProgressInTitle *bool `json:"show_progress_in_title,omitempty"`

	// Show Progress Type
	//
	// Live preview method
	ShowProgressType *string `json:"show_progress_type,omitempty"`

	// Show Progressbar
	//
	// Show progressbar
	ShowProgressbar *bool `json:"show_progressbar,omitempty"`

	// Show Warnings
	//
	// Show warnings in console.
	ShowWarnings interface{} `json:"show_warnings,omitempty"`

	// Sigma Max
	//
	// sigma max
	SigmaMax interface{} `json:"sigma_max,omitempty"`

	// Sigma Min
	//
	// sigma min
	SigmaMin interface{} `json:"sigma_min,omitempty"`

	// Target Side Length
	//
	// Width/height limit for the above option, in pixels
	TargetSideLength *float64 `json:"target_side_length,omitempty"`

	// Temp Dir
	//
	// Directory for temporary images; leave empty for default
	TempDir interface{} `json:"temp_dir,omitempty"`

	// Textual Inversion Add Hashes To Infotext
	//
	// Add Textual Inversion hashes to infotext
	TextualInversionAddHashesToInfotext *bool `json:"textual_inversion_add_hashes_to_infotext,omitempty"`

	// Textual Inversion Print At Load
	//
	// Print a list of Textual Inversion embeddings when loading model
	TextualInversionPrintAtLoad interface{} `json:"textual_inversion_print_at_load,omitempty"`

	// Token Merging Ratio
	//
	// Token merging ratio
	TokenMergingRatio interface{} `json:"token_merging_ratio,omitempty"`

	// Token Merging Ratio Hr
	//
	// Token merging ratio for high-res pass
	TokenMergingRatioHr interface{} `json:"token_merging_ratio_hr,omitempty"`

	// Token Merging Ratio Img2Img
	//
	// Token merging ratio for img2img
	TokenMergingRatioImg2img interface{} `json:"token_merging_ratio_img2img,omitempty"`

	// Training Enable Tensorboard
	//
	// Enable tensorboard logging.
	TrainingEnableTensorboard interface{} `json:"training_enable_tensorboard,omitempty"`

	// Training Image Repeats Per Epoch
	//
	// Number of repeats for a single input image per epoch; used only for displaying epoch number
	TrainingImageRepeatsPerEpoch *float64 `json:"training_image_repeats_per_epoch,omitempty"`

	// Training Tensorboard Flush Every
	//
	// How often, in seconds, to flush the pending tensorboard events and summaries to disk.
	TrainingTensorboardFlushEvery *float64 `json:"training_tensorboard_flush_every,omitempty"`

	// Training Tensorboard Save Images
	//
	// Save generated images within tensorboard.
	TrainingTensorboardSaveImages interface{} `json:"training_tensorboard_save_images,omitempty"`

	// Training Write Csv Every
	//
	// Save an csv containing the loss to log directory every N steps, 0 to disable
	TrainingWriteCsvEvery *float64 `json:"training_write_csv_every,omitempty"`

	// Training Xattention Optimizations
	//
	// Use cross attention optimizations while training
	TrainingXattentionOptimizations interface{} `json:"training_xattention_optimizations,omitempty"`

	// Ui Extra Networks Tab Reorder
	//
	// Extra networks tab order
	UIExtraNetworksTabReorder interface{} `json:"ui_extra_networks_tab_reorder,omitempty"`

	// Ui Reorder List
	//
	// txt2img/img2img UI item order
	UIReorderList interface{} `json:"ui_reorder_list,omitempty"`

	// Ui Tab Order
	//
	// UI tab order
	UITabOrder interface{} `json:"ui_tab_order,omitempty"`

	// Uni Pc Lower Order Final
	//
	// UniPC lower order final
	UniPcLowerOrderFinal *bool `json:"uni_pc_lower_order_final,omitempty"`

	// Uni Pc Order
	//
	// UniPC order
	UniPcOrder *float64 `json:"uni_pc_order,omitempty"`

	// Uni Pc Skip Type
	//
	// UniPC skip type
	UniPcSkipType *string `json:"uni_pc_skip_type,omitempty"`

	// Uni Pc Variant
	//
	// UniPC variant
	UniPcVariant *string `json:"uni_pc_variant,omitempty"`

	// Unload Models When Training
	//
	// Move VAE and CLIP to RAM when training if possible. Saves VRAM.
	UnloadModelsWhenTraining interface{} `json:"unload_models_when_training,omitempty"`

	// Upcast Attn
	//
	// Upcast cross attention layer to float32
	UpcastAttn interface{} `json:"upcast_attn,omitempty"`

	// Upscaler For Img2Img
	//
	// Upscaler for img2img
	UpscalerForImg2img interface{} `json:"upscaler_for_img2img,omitempty"`

	// Upscaling Max Images In Cache
	//
	// Maximum number of images in upscaling cache
	UpscalingMaxImagesInCache *float64 `json:"upscaling_max_images_in_cache,omitempty"`

	// Use Old Emphasis Implementation
	//
	// Use old emphasis implementation. Can be useful to reproduce old seeds.
	UseOldEmphasisImplementation interface{} `json:"use_old_emphasis_implementation,omitempty"`

	// Use Old Hires Fix Width Height
	//
	// For hires fix, use width/height sliders to set final resolution rather than first pass (disables Upscale by, Resize width/height to).
	UseOldHiresFixWidthHeight interface{} `json:"use_old_hires_fix_width_height,omitempty"`

	// Use Old Karras Scheduler Sigmas
	//
	// Use old karras scheduler sigmas (0.1 to 10).
	UseOldKarrasSchedulerSigmas interface{} `json:"use_old_karras_scheduler_sigmas,omitempty"`

	// Use Original Name Batch
	//
	// Use original name for output filename during batch process in extras tab
	UseOriginalNameBatch *bool `json:"use_original_name_batch,omitempty"`

	// Use Save To Dirs For Ui
	//
	// When using "Save" button, save images to a subdirectory
	UseSaveToDirsForUI interface{} `json:"use_save_to_dirs_for_ui,omitempty"`

	// Use Upscaler Name As Suffix
	//
	// Use upscaler name as filename suffix in the extras tab
	UseUpscalerNameAsSuffix interface{} `json:"use_upscaler_name_as_suffix,omitempty"`

	// Webp Lossless
	//
	// Use lossless compression for webp images
	WebpLossless interface{} `json:"webp_lossless,omitempty"`
}

// Validate validates this options
func (m *Options) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this options based on context it is used
func (m *Options) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Options) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Options) UnmarshalBinary(b []byte) error {
	var res Options
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
