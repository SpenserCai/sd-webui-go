// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewUpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams creates a new UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams() *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams {
	return &UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParamsWithTimeout creates a new UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams object
// with the ability to set a timeout on a request.
func NewUpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParamsWithTimeout(timeout time.Duration) *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams {
	return &UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams{
		timeout: timeout,
	}
}

// NewUpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParamsWithContext creates a new UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams object
// with the ability to set a context for a request.
func NewUpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParamsWithContext(ctx context.Context) *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams {
	return &UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams{
		Context: ctx,
	}
}

// NewUpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParamsWithHTTPClient creates a new UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParamsWithHTTPClient(client *http.Client) *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams {
	return &UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams{
		HTTPClient: client,
	}
}

/*
UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams contains all the parameters to send to the API endpoint

	for the update image db data infinite image browsing db update image data post operation.

	Typically these are written to a http.Request.
*/
type UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams struct {
	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update image db data infinite image browsing db update image data post params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams) WithDefaults() *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update image db data infinite image browsing db update image data post params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update image db data infinite image browsing db update image data post params
func (o *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams) WithTimeout(timeout time.Duration) *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update image db data infinite image browsing db update image data post params
func (o *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update image db data infinite image browsing db update image data post params
func (o *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams) WithContext(ctx context.Context) *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update image db data infinite image browsing db update image data post params
func (o *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update image db data infinite image browsing db update image data post params
func (o *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams) WithHTTPClient(client *http.Client) *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update image db data infinite image browsing db update image data post params
func (o *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateImageDbDataInfiniteImageBrowsingDbUpdateImageDataPostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
