// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewAPIInfoInfoGetParams creates a new APIInfoInfoGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAPIInfoInfoGetParams() *APIInfoInfoGetParams {
	return &APIInfoInfoGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAPIInfoInfoGetParamsWithTimeout creates a new APIInfoInfoGetParams object
// with the ability to set a timeout on a request.
func NewAPIInfoInfoGetParamsWithTimeout(timeout time.Duration) *APIInfoInfoGetParams {
	return &APIInfoInfoGetParams{
		timeout: timeout,
	}
}

// NewAPIInfoInfoGetParamsWithContext creates a new APIInfoInfoGetParams object
// with the ability to set a context for a request.
func NewAPIInfoInfoGetParamsWithContext(ctx context.Context) *APIInfoInfoGetParams {
	return &APIInfoInfoGetParams{
		Context: ctx,
	}
}

// NewAPIInfoInfoGetParamsWithHTTPClient creates a new APIInfoInfoGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewAPIInfoInfoGetParamsWithHTTPClient(client *http.Client) *APIInfoInfoGetParams {
	return &APIInfoInfoGetParams{
		HTTPClient: client,
	}
}

/*
APIInfoInfoGetParams contains all the parameters to send to the API endpoint

	for the api info info get operation.

	Typically these are written to a http.Request.
*/
type APIInfoInfoGetParams struct {

	// Serialize.
	//
	// Default: true
	Serialize *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the api info info get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *APIInfoInfoGetParams) WithDefaults() *APIInfoInfoGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the api info info get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *APIInfoInfoGetParams) SetDefaults() {
	var (
		serializeDefault = bool(true)
	)

	val := APIInfoInfoGetParams{
		Serialize: &serializeDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the api info info get params
func (o *APIInfoInfoGetParams) WithTimeout(timeout time.Duration) *APIInfoInfoGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the api info info get params
func (o *APIInfoInfoGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the api info info get params
func (o *APIInfoInfoGetParams) WithContext(ctx context.Context) *APIInfoInfoGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the api info info get params
func (o *APIInfoInfoGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the api info info get params
func (o *APIInfoInfoGetParams) WithHTTPClient(client *http.Client) *APIInfoInfoGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the api info info get params
func (o *APIInfoInfoGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSerialize adds the serialize to the api info info get params
func (o *APIInfoInfoGetParams) WithSerialize(serialize *bool) *APIInfoInfoGetParams {
	o.SetSerialize(serialize)
	return o
}

// SetSerialize adds the serialize to the api info info get params
func (o *APIInfoInfoGetParams) SetSerialize(serialize *bool) {
	o.Serialize = serialize
}

// WriteToRequest writes these params to a swagger request
func (o *APIInfoInfoGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Serialize != nil {

		// query param serialize
		var qrSerialize bool

		if o.Serialize != nil {
			qrSerialize = *o.Serialize
		}
		qSerialize := swag.FormatBool(qrSerialize)
		if qSerialize != "" {

			if err := r.SetQueryParam("serialize", qSerialize); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
