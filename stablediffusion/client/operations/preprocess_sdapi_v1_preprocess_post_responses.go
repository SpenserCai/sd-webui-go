// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/SpenserCai/sd-webui-go/stablediffusion/models"
)

// PreprocessSdapiV1PreprocessPostReader is a Reader for the PreprocessSdapiV1PreprocessPost structure.
type PreprocessSdapiV1PreprocessPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PreprocessSdapiV1PreprocessPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPreprocessSdapiV1PreprocessPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 422:
		result := NewPreprocessSdapiV1PreprocessPostUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPreprocessSdapiV1PreprocessPostOK creates a PreprocessSdapiV1PreprocessPostOK with default headers values
func NewPreprocessSdapiV1PreprocessPostOK() *PreprocessSdapiV1PreprocessPostOK {
	return &PreprocessSdapiV1PreprocessPostOK{}
}

/*
PreprocessSdapiV1PreprocessPostOK describes a response with status code 200, with default header values.

Successful Response
*/
type PreprocessSdapiV1PreprocessPostOK struct {
	Payload *models.PreprocessResponse
}

// IsSuccess returns true when this preprocess sdapi v1 preprocess post o k response has a 2xx status code
func (o *PreprocessSdapiV1PreprocessPostOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this preprocess sdapi v1 preprocess post o k response has a 3xx status code
func (o *PreprocessSdapiV1PreprocessPostOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this preprocess sdapi v1 preprocess post o k response has a 4xx status code
func (o *PreprocessSdapiV1PreprocessPostOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this preprocess sdapi v1 preprocess post o k response has a 5xx status code
func (o *PreprocessSdapiV1PreprocessPostOK) IsServerError() bool {
	return false
}

// IsCode returns true when this preprocess sdapi v1 preprocess post o k response a status code equal to that given
func (o *PreprocessSdapiV1PreprocessPostOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the preprocess sdapi v1 preprocess post o k response
func (o *PreprocessSdapiV1PreprocessPostOK) Code() int {
	return 200
}

func (o *PreprocessSdapiV1PreprocessPostOK) Error() string {
	return fmt.Sprintf("[POST /sdapi/v1/preprocess][%d] preprocessSdapiV1PreprocessPostOK  %+v", 200, o.Payload)
}

func (o *PreprocessSdapiV1PreprocessPostOK) String() string {
	return fmt.Sprintf("[POST /sdapi/v1/preprocess][%d] preprocessSdapiV1PreprocessPostOK  %+v", 200, o.Payload)
}

func (o *PreprocessSdapiV1PreprocessPostOK) GetPayload() *models.PreprocessResponse {
	return o.Payload
}

func (o *PreprocessSdapiV1PreprocessPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PreprocessResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPreprocessSdapiV1PreprocessPostUnprocessableEntity creates a PreprocessSdapiV1PreprocessPostUnprocessableEntity with default headers values
func NewPreprocessSdapiV1PreprocessPostUnprocessableEntity() *PreprocessSdapiV1PreprocessPostUnprocessableEntity {
	return &PreprocessSdapiV1PreprocessPostUnprocessableEntity{}
}

/*
PreprocessSdapiV1PreprocessPostUnprocessableEntity describes a response with status code 422, with default header values.

Validation Error
*/
type PreprocessSdapiV1PreprocessPostUnprocessableEntity struct {
	Payload *models.HTTPValidationError
}

// IsSuccess returns true when this preprocess sdapi v1 preprocess post unprocessable entity response has a 2xx status code
func (o *PreprocessSdapiV1PreprocessPostUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this preprocess sdapi v1 preprocess post unprocessable entity response has a 3xx status code
func (o *PreprocessSdapiV1PreprocessPostUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this preprocess sdapi v1 preprocess post unprocessable entity response has a 4xx status code
func (o *PreprocessSdapiV1PreprocessPostUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this preprocess sdapi v1 preprocess post unprocessable entity response has a 5xx status code
func (o *PreprocessSdapiV1PreprocessPostUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this preprocess sdapi v1 preprocess post unprocessable entity response a status code equal to that given
func (o *PreprocessSdapiV1PreprocessPostUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the preprocess sdapi v1 preprocess post unprocessable entity response
func (o *PreprocessSdapiV1PreprocessPostUnprocessableEntity) Code() int {
	return 422
}

func (o *PreprocessSdapiV1PreprocessPostUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /sdapi/v1/preprocess][%d] preprocessSdapiV1PreprocessPostUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PreprocessSdapiV1PreprocessPostUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /sdapi/v1/preprocess][%d] preprocessSdapiV1PreprocessPostUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PreprocessSdapiV1PreprocessPostUnprocessableEntity) GetPayload() *models.HTTPValidationError {
	return o.Payload
}

func (o *PreprocessSdapiV1PreprocessPostUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
