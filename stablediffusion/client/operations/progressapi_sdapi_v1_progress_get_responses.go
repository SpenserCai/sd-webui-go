// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/SpenserCai/sd-webui-go/stablediffusion/models"
)

// ProgressapiSdapiV1ProgressGetReader is a Reader for the ProgressapiSdapiV1ProgressGet structure.
type ProgressapiSdapiV1ProgressGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProgressapiSdapiV1ProgressGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProgressapiSdapiV1ProgressGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 422:
		result := NewProgressapiSdapiV1ProgressGetUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProgressapiSdapiV1ProgressGetOK creates a ProgressapiSdapiV1ProgressGetOK with default headers values
func NewProgressapiSdapiV1ProgressGetOK() *ProgressapiSdapiV1ProgressGetOK {
	return &ProgressapiSdapiV1ProgressGetOK{}
}

/*
ProgressapiSdapiV1ProgressGetOK describes a response with status code 200, with default header values.

Successful Response
*/
type ProgressapiSdapiV1ProgressGetOK struct {
	Payload *models.ModulesAPIModelsProgressResponse
}

// IsSuccess returns true when this progressapi sdapi v1 progress get o k response has a 2xx status code
func (o *ProgressapiSdapiV1ProgressGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this progressapi sdapi v1 progress get o k response has a 3xx status code
func (o *ProgressapiSdapiV1ProgressGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this progressapi sdapi v1 progress get o k response has a 4xx status code
func (o *ProgressapiSdapiV1ProgressGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this progressapi sdapi v1 progress get o k response has a 5xx status code
func (o *ProgressapiSdapiV1ProgressGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this progressapi sdapi v1 progress get o k response a status code equal to that given
func (o *ProgressapiSdapiV1ProgressGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the progressapi sdapi v1 progress get o k response
func (o *ProgressapiSdapiV1ProgressGetOK) Code() int {
	return 200
}

func (o *ProgressapiSdapiV1ProgressGetOK) Error() string {
	return fmt.Sprintf("[GET /sdapi/v1/progress][%d] progressapiSdapiV1ProgressGetOK  %+v", 200, o.Payload)
}

func (o *ProgressapiSdapiV1ProgressGetOK) String() string {
	return fmt.Sprintf("[GET /sdapi/v1/progress][%d] progressapiSdapiV1ProgressGetOK  %+v", 200, o.Payload)
}

func (o *ProgressapiSdapiV1ProgressGetOK) GetPayload() *models.ModulesAPIModelsProgressResponse {
	return o.Payload
}

func (o *ProgressapiSdapiV1ProgressGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModulesAPIModelsProgressResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProgressapiSdapiV1ProgressGetUnprocessableEntity creates a ProgressapiSdapiV1ProgressGetUnprocessableEntity with default headers values
func NewProgressapiSdapiV1ProgressGetUnprocessableEntity() *ProgressapiSdapiV1ProgressGetUnprocessableEntity {
	return &ProgressapiSdapiV1ProgressGetUnprocessableEntity{}
}

/*
ProgressapiSdapiV1ProgressGetUnprocessableEntity describes a response with status code 422, with default header values.

Validation Error
*/
type ProgressapiSdapiV1ProgressGetUnprocessableEntity struct {
	Payload *models.HTTPValidationError
}

// IsSuccess returns true when this progressapi sdapi v1 progress get unprocessable entity response has a 2xx status code
func (o *ProgressapiSdapiV1ProgressGetUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this progressapi sdapi v1 progress get unprocessable entity response has a 3xx status code
func (o *ProgressapiSdapiV1ProgressGetUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this progressapi sdapi v1 progress get unprocessable entity response has a 4xx status code
func (o *ProgressapiSdapiV1ProgressGetUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this progressapi sdapi v1 progress get unprocessable entity response has a 5xx status code
func (o *ProgressapiSdapiV1ProgressGetUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this progressapi sdapi v1 progress get unprocessable entity response a status code equal to that given
func (o *ProgressapiSdapiV1ProgressGetUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the progressapi sdapi v1 progress get unprocessable entity response
func (o *ProgressapiSdapiV1ProgressGetUnprocessableEntity) Code() int {
	return 422
}

func (o *ProgressapiSdapiV1ProgressGetUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /sdapi/v1/progress][%d] progressapiSdapiV1ProgressGetUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *ProgressapiSdapiV1ProgressGetUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /sdapi/v1/progress][%d] progressapiSdapiV1ProgressGetUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *ProgressapiSdapiV1ProgressGetUnprocessableEntity) GetPayload() *models.HTTPValidationError {
	return o.Payload
}

func (o *ProgressapiSdapiV1ProgressGetUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
