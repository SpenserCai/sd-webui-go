// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/SpenserCai/sd-webui-go/stablediffusion/models"
)

// InterruptapiSdapiV1InterruptPostReader is a Reader for the InterruptapiSdapiV1InterruptPost structure.
type InterruptapiSdapiV1InterruptPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InterruptapiSdapiV1InterruptPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInterruptapiSdapiV1InterruptPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewInterruptapiSdapiV1InterruptPostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewInterruptapiSdapiV1InterruptPostOK creates a InterruptapiSdapiV1InterruptPostOK with default headers values
func NewInterruptapiSdapiV1InterruptPostOK() *InterruptapiSdapiV1InterruptPostOK {
	return &InterruptapiSdapiV1InterruptPostOK{}
}

/*
InterruptapiSdapiV1InterruptPostOK describes a response with status code 200, with default header values.

Successful Response
*/
type InterruptapiSdapiV1InterruptPostOK struct {
	Payload interface{}
}

// IsSuccess returns true when this interruptapi sdapi v1 interrupt post o k response has a 2xx status code
func (o *InterruptapiSdapiV1InterruptPostOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this interruptapi sdapi v1 interrupt post o k response has a 3xx status code
func (o *InterruptapiSdapiV1InterruptPostOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this interruptapi sdapi v1 interrupt post o k response has a 4xx status code
func (o *InterruptapiSdapiV1InterruptPostOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this interruptapi sdapi v1 interrupt post o k response has a 5xx status code
func (o *InterruptapiSdapiV1InterruptPostOK) IsServerError() bool {
	return false
}

// IsCode returns true when this interruptapi sdapi v1 interrupt post o k response a status code equal to that given
func (o *InterruptapiSdapiV1InterruptPostOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the interruptapi sdapi v1 interrupt post o k response
func (o *InterruptapiSdapiV1InterruptPostOK) Code() int {
	return 200
}

func (o *InterruptapiSdapiV1InterruptPostOK) Error() string {
	return fmt.Sprintf("[POST /sdapi/v1/interrupt][%d] interruptapiSdapiV1InterruptPostOK  %+v", 200, o.Payload)
}

func (o *InterruptapiSdapiV1InterruptPostOK) String() string {
	return fmt.Sprintf("[POST /sdapi/v1/interrupt][%d] interruptapiSdapiV1InterruptPostOK  %+v", 200, o.Payload)
}

func (o *InterruptapiSdapiV1InterruptPostOK) GetPayload() interface{} {
	return o.Payload
}

func (o *InterruptapiSdapiV1InterruptPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInterruptapiSdapiV1InterruptPostInternalServerError creates a InterruptapiSdapiV1InterruptPostInternalServerError with default headers values
func NewInterruptapiSdapiV1InterruptPostInternalServerError() *InterruptapiSdapiV1InterruptPostInternalServerError {
	return &InterruptapiSdapiV1InterruptPostInternalServerError{}
}

/*
InterruptapiSdapiV1InterruptPostInternalServerError describes a response with status code 500, with default header values.

HTTPException
*/
type InterruptapiSdapiV1InterruptPostInternalServerError struct {
	Payload *models.HTTPException
}

// IsSuccess returns true when this interruptapi sdapi v1 interrupt post internal server error response has a 2xx status code
func (o *InterruptapiSdapiV1InterruptPostInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this interruptapi sdapi v1 interrupt post internal server error response has a 3xx status code
func (o *InterruptapiSdapiV1InterruptPostInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this interruptapi sdapi v1 interrupt post internal server error response has a 4xx status code
func (o *InterruptapiSdapiV1InterruptPostInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this interruptapi sdapi v1 interrupt post internal server error response has a 5xx status code
func (o *InterruptapiSdapiV1InterruptPostInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this interruptapi sdapi v1 interrupt post internal server error response a status code equal to that given
func (o *InterruptapiSdapiV1InterruptPostInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the interruptapi sdapi v1 interrupt post internal server error response
func (o *InterruptapiSdapiV1InterruptPostInternalServerError) Code() int {
	return 500
}

func (o *InterruptapiSdapiV1InterruptPostInternalServerError) Error() string {
	return fmt.Sprintf("[POST /sdapi/v1/interrupt][%d] interruptapiSdapiV1InterruptPostInternalServerError  %+v", 500, o.Payload)
}

func (o *InterruptapiSdapiV1InterruptPostInternalServerError) String() string {
	return fmt.Sprintf("[POST /sdapi/v1/interrupt][%d] interruptapiSdapiV1InterruptPostInternalServerError  %+v", 500, o.Payload)
}

func (o *InterruptapiSdapiV1InterruptPostInternalServerError) GetPayload() *models.HTTPException {
	return o.Payload
}

func (o *InterruptapiSdapiV1InterruptPostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
