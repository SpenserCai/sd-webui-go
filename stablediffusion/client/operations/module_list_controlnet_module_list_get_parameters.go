// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewModuleListControlnetModuleListGetParams creates a new ModuleListControlnetModuleListGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewModuleListControlnetModuleListGetParams() *ModuleListControlnetModuleListGetParams {
	return &ModuleListControlnetModuleListGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewModuleListControlnetModuleListGetParamsWithTimeout creates a new ModuleListControlnetModuleListGetParams object
// with the ability to set a timeout on a request.
func NewModuleListControlnetModuleListGetParamsWithTimeout(timeout time.Duration) *ModuleListControlnetModuleListGetParams {
	return &ModuleListControlnetModuleListGetParams{
		timeout: timeout,
	}
}

// NewModuleListControlnetModuleListGetParamsWithContext creates a new ModuleListControlnetModuleListGetParams object
// with the ability to set a context for a request.
func NewModuleListControlnetModuleListGetParamsWithContext(ctx context.Context) *ModuleListControlnetModuleListGetParams {
	return &ModuleListControlnetModuleListGetParams{
		Context: ctx,
	}
}

// NewModuleListControlnetModuleListGetParamsWithHTTPClient creates a new ModuleListControlnetModuleListGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewModuleListControlnetModuleListGetParamsWithHTTPClient(client *http.Client) *ModuleListControlnetModuleListGetParams {
	return &ModuleListControlnetModuleListGetParams{
		HTTPClient: client,
	}
}

/*
ModuleListControlnetModuleListGetParams contains all the parameters to send to the API endpoint

	for the module list controlnet module list get operation.

	Typically these are written to a http.Request.
*/
type ModuleListControlnetModuleListGetParams struct {

	// AliasNames.
	AliasNames *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the module list controlnet module list get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ModuleListControlnetModuleListGetParams) WithDefaults() *ModuleListControlnetModuleListGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the module list controlnet module list get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ModuleListControlnetModuleListGetParams) SetDefaults() {
	var (
		aliasNamesDefault = bool(false)
	)

	val := ModuleListControlnetModuleListGetParams{
		AliasNames: &aliasNamesDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the module list controlnet module list get params
func (o *ModuleListControlnetModuleListGetParams) WithTimeout(timeout time.Duration) *ModuleListControlnetModuleListGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the module list controlnet module list get params
func (o *ModuleListControlnetModuleListGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the module list controlnet module list get params
func (o *ModuleListControlnetModuleListGetParams) WithContext(ctx context.Context) *ModuleListControlnetModuleListGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the module list controlnet module list get params
func (o *ModuleListControlnetModuleListGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the module list controlnet module list get params
func (o *ModuleListControlnetModuleListGetParams) WithHTTPClient(client *http.Client) *ModuleListControlnetModuleListGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the module list controlnet module list get params
func (o *ModuleListControlnetModuleListGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAliasNames adds the aliasNames to the module list controlnet module list get params
func (o *ModuleListControlnetModuleListGetParams) WithAliasNames(aliasNames *bool) *ModuleListControlnetModuleListGetParams {
	o.SetAliasNames(aliasNames)
	return o
}

// SetAliasNames adds the aliasNames to the module list controlnet module list get params
func (o *ModuleListControlnetModuleListGetParams) SetAliasNames(aliasNames *bool) {
	o.AliasNames = aliasNames
}

// WriteToRequest writes these params to a swagger request
func (o *ModuleListControlnetModuleListGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AliasNames != nil {

		// query param alias_names
		var qrAliasNames bool

		if o.AliasNames != nil {
			qrAliasNames = *o.AliasNames
		}
		qAliasNames := swag.FormatBool(qrAliasNames)
		if qAliasNames != "" {

			if err := r.SetQueryParam("alias_names", qAliasNames); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
