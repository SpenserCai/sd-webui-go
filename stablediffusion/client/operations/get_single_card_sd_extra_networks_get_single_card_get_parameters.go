// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetSingleCardSdExtraNetworksGetSingleCardGetParams creates a new GetSingleCardSdExtraNetworksGetSingleCardGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetSingleCardSdExtraNetworksGetSingleCardGetParams() *GetSingleCardSdExtraNetworksGetSingleCardGetParams {
	return &GetSingleCardSdExtraNetworksGetSingleCardGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetSingleCardSdExtraNetworksGetSingleCardGetParamsWithTimeout creates a new GetSingleCardSdExtraNetworksGetSingleCardGetParams object
// with the ability to set a timeout on a request.
func NewGetSingleCardSdExtraNetworksGetSingleCardGetParamsWithTimeout(timeout time.Duration) *GetSingleCardSdExtraNetworksGetSingleCardGetParams {
	return &GetSingleCardSdExtraNetworksGetSingleCardGetParams{
		timeout: timeout,
	}
}

// NewGetSingleCardSdExtraNetworksGetSingleCardGetParamsWithContext creates a new GetSingleCardSdExtraNetworksGetSingleCardGetParams object
// with the ability to set a context for a request.
func NewGetSingleCardSdExtraNetworksGetSingleCardGetParamsWithContext(ctx context.Context) *GetSingleCardSdExtraNetworksGetSingleCardGetParams {
	return &GetSingleCardSdExtraNetworksGetSingleCardGetParams{
		Context: ctx,
	}
}

// NewGetSingleCardSdExtraNetworksGetSingleCardGetParamsWithHTTPClient creates a new GetSingleCardSdExtraNetworksGetSingleCardGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetSingleCardSdExtraNetworksGetSingleCardGetParamsWithHTTPClient(client *http.Client) *GetSingleCardSdExtraNetworksGetSingleCardGetParams {
	return &GetSingleCardSdExtraNetworksGetSingleCardGetParams{
		HTTPClient: client,
	}
}

/*
GetSingleCardSdExtraNetworksGetSingleCardGetParams contains all the parameters to send to the API endpoint

	for the get single card sd extra networks get single card get operation.

	Typically these are written to a http.Request.
*/
type GetSingleCardSdExtraNetworksGetSingleCardGetParams struct {

	// Name.
	Name *string

	// Page.
	Page *string

	// Tabname.
	Tabname *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get single card sd extra networks get single card get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSingleCardSdExtraNetworksGetSingleCardGetParams) WithDefaults() *GetSingleCardSdExtraNetworksGetSingleCardGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get single card sd extra networks get single card get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSingleCardSdExtraNetworksGetSingleCardGetParams) SetDefaults() {
	var (
		nameDefault = string("")

		pageDefault = string("")

		tabnameDefault = string("")
	)

	val := GetSingleCardSdExtraNetworksGetSingleCardGetParams{
		Name:    &nameDefault,
		Page:    &pageDefault,
		Tabname: &tabnameDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get single card sd extra networks get single card get params
func (o *GetSingleCardSdExtraNetworksGetSingleCardGetParams) WithTimeout(timeout time.Duration) *GetSingleCardSdExtraNetworksGetSingleCardGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get single card sd extra networks get single card get params
func (o *GetSingleCardSdExtraNetworksGetSingleCardGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get single card sd extra networks get single card get params
func (o *GetSingleCardSdExtraNetworksGetSingleCardGetParams) WithContext(ctx context.Context) *GetSingleCardSdExtraNetworksGetSingleCardGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get single card sd extra networks get single card get params
func (o *GetSingleCardSdExtraNetworksGetSingleCardGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get single card sd extra networks get single card get params
func (o *GetSingleCardSdExtraNetworksGetSingleCardGetParams) WithHTTPClient(client *http.Client) *GetSingleCardSdExtraNetworksGetSingleCardGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get single card sd extra networks get single card get params
func (o *GetSingleCardSdExtraNetworksGetSingleCardGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the get single card sd extra networks get single card get params
func (o *GetSingleCardSdExtraNetworksGetSingleCardGetParams) WithName(name *string) *GetSingleCardSdExtraNetworksGetSingleCardGetParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get single card sd extra networks get single card get params
func (o *GetSingleCardSdExtraNetworksGetSingleCardGetParams) SetName(name *string) {
	o.Name = name
}

// WithPage adds the page to the get single card sd extra networks get single card get params
func (o *GetSingleCardSdExtraNetworksGetSingleCardGetParams) WithPage(page *string) *GetSingleCardSdExtraNetworksGetSingleCardGetParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get single card sd extra networks get single card get params
func (o *GetSingleCardSdExtraNetworksGetSingleCardGetParams) SetPage(page *string) {
	o.Page = page
}

// WithTabname adds the tabname to the get single card sd extra networks get single card get params
func (o *GetSingleCardSdExtraNetworksGetSingleCardGetParams) WithTabname(tabname *string) *GetSingleCardSdExtraNetworksGetSingleCardGetParams {
	o.SetTabname(tabname)
	return o
}

// SetTabname adds the tabname to the get single card sd extra networks get single card get params
func (o *GetSingleCardSdExtraNetworksGetSingleCardGetParams) SetTabname(tabname *string) {
	o.Tabname = tabname
}

// WriteToRequest writes these params to a swagger request
func (o *GetSingleCardSdExtraNetworksGetSingleCardGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Name != nil {

		// query param name
		var qrName string

		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.Page != nil {

		// query param page
		var qrPage string

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := qrPage
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.Tabname != nil {

		// query param tabname
		var qrTabname string

		if o.Tabname != nil {
			qrTabname = *o.Tabname
		}
		qTabname := qrTabname
		if qTabname != "" {

			if err := r.SetQueryParam("tabname", qTabname); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
